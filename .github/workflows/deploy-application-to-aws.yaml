name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Angular Cli
      working-directory: client
      run: npm install -g @angular/cli@17

    - name: Install dependencies and builder angular app
      run: |
          cd client
          npm install
          ng build --configuration production

    - name: Deploy to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      run: |
        npm install -g aws-cli
        aws s3 sync ./dist/client/browser/ s3://$S3_BUCKET_NAME --delete
      working-directory: client

        # Backend deployment step
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
  
    - name: Log in to Amazon ECR
      env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}
  
    - name: Build and push Docker image to ECR
      env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      run: |
          cd API
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REPOSITORY:$IMAGE_TAG

